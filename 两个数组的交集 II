class Solution:
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        len1, len2 = len(nums1), len(nums2)
        if len1 ==  0 or len2 == 0:
            return []
        nums1.sort()
        nums2.sort()
        if nums1 == nums2:
            return nums1
        inter = []
        n1 = nums1.pop(0)
        n2 = nums2.pop(0)
        for i in range(sum([len1, len2])):
            if nums1 == [] and nums2 == []: #list均为空
                if n1 == n2:
                    inter.append(n1)
                    return inter
                else:
                    return inter
            elif nums1 == []:
                for k in range(len(nums2)):
                    if  n1 == n2:
                        print(1)
                        inter.append(n1)
                        return inter 
                    elif n1 > n2:
                        n2 = nums2.pop(0)
                    else:
                        return inter
            elif nums2 == []:
                for k in range(len(nums1)):
                    if  n1 == n2:
                        inter.append(n1)
                        return inter 
                    elif n2 > n1:
                        n1 = nums1.pop(0)
                    else:
                        return inter     
            else: #list均不为空
                if n1 == n2: 
                    inter.append(n1)
                    n1 = nums1.pop(0)
                    n2 = nums2.pop(0)
                elif n1 > n2:
                    n2 = nums2.pop(0)
                elif n2 > n1:
                    n1 = nums1.pop(0)
        return inter
